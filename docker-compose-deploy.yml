version: "3.9"

services:
  app:
    image: custom_laravel:latest
    container_name: laravel-app
    networks:
      - app-network
    expose:
      - 9000
    ports:
      - "9000:9000"   # Port for Laravel's web server (UI + API)
    command: >
      bash -c "
        composer update &&
        php artisan key:generate && 
        php artisan migrate:fresh --force && 
        php artisan db:seed --class=SeederSQLFileSeeder --force && 
        php artisan storage:link && 
        npm run build --host && 
        php artisan serve --host=0.0.0.0 --port=9000
      "
    depends_on:
      - db

  db:
    image: mysql:8   # Latest stable MySQL version
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: admin
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - app-network
    ports:
      - "3306:3306"   # MySQL port

  prometheus:
    image: prom/prometheus:latest   # Latest stable Prometheus version
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    ports:
      - "9090:9090"  # Prometheus UI port
    networks:
      - app-network

  node-exporter:
    image: prom/node-exporter:latest  # Latest stable Node Exporter version
    container_name: node-exporter
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    ports:
      - "9100:9100"  # Node Exporter port
    volumes:
      - /sys:/host/sys:ro
      - /proc:/host/proc:ro  # Add this line to mount /proc from host to container
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - prometheus
    volumes:
      - ./dashboards:/etc/grafana/provisioning/dashboards
      - ./dashboards/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./provisioning/datasources:/etc/grafana/provisioning/datasources

  glances:
    image: nicolargo/glances:latest
    container_name: glances
    expose:
      - 61208
    ports:
      - "61208:61208"  # Glances port
    command: "glances -w"  # Start Glances in web mode, which also exposes Prometheus metrics
    networks:
      - app-network

volumes:
  db-data:
  prometheus_data:

networks:
  app-network:
    driver: bridge
